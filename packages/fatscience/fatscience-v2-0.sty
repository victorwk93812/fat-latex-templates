%%%%% fatscience-v2-0.sty %%%%%

%% A LaTeX package including commonly used LaTeX packages and features for writing a report on physics, mathematics and computer science. %%

%% After setting up the prerequisites, should work out of the box on Overleaf. %%

%%%%% Identification %%%%%

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{fatscience-v2-0}[2025/04/15 v2.0 Personal frequently used package]

%%%%% Preliminary Declarations %%%%%

% Uncomment this to prevent clash between amsthm and newtxmath
% \let\openbox\undefined

% amsthm provides an unnumbered theorem-like environments
% see https://www.overleaf.com/learn/latex/Theorems_and_proofs#Unnumbered_theorem-like_environments
\RequirePackage{amsthm}

% \RequirePackage{newtxmath}

\RequirePackage{amssymb}

%amssymb for mathfonts more compatible with computer roman, newtxmath for math fonts more compatible with Times new roman. 

\RequirePackage{amsfonts}

% \RequirePackage[usenames, dvipsnames]{color}
\RequirePackage{xcolor}

\RequirePackage{soul}

\RequirePackage{mathtools}

\RequirePackage{hyperref}

\RequirePackage{fancyhdr}

\RequirePackage[bottom]{footmisc}

\RequirePackage{lipsum}

\RequirePackage[normalem]{ulem}

\RequirePackage{cancel}

\RequirePackage{fontspec}

% See section "Math/Fonts/Scripty Fonts"
\RequirePackage{mathrsfs}

\RequirePackage{physics}

% See section "Tables/Multicols & Multirows"
\RequirePackage{multicol}

\RequirePackage{multirow}

\RequirePackage{zhnumber}

% See section "Page Formatting/Resize Floats"
\RequirePackage{graphicx}

\RequirePackage{xltxtra}

% \RequirePackage{titling} % Causes infinite compilation time, under investigation
% \thetitle, \theauthor and \thedate

% See section "Citation"
\RequirePackage{biblatex} 

\RequirePackage{caption} 

% See section "Figures/Multiple Figures"
\RequirePackage{subcaption}

\RequirePackage{wrapfig}

\RequirePackage{float}

\RequirePackage{calligra}

\RequirePackage{hyperref}

\RequirePackage{url}

\RequirePackage{xurl}

% Allows linebreak of URLs loaded in Refernces, useful while citing URLs

\RequirePackage{gensymb}

% Framed Maunal: 
% https://wiki.contextgarden.net/Framed
\RequirePackage{framed}

% tcolorbox Tutorial
% https://liam.page/2016/07/22/using-the-tcolorbox-package-to-create-a-new-theorem-environment/
\RequirePackage[most]{tcolorbox}

\RequirePackage{siunitx}

\RequirePackage{array} % Fixes width or height for a column or row in a tabular environment
\newcolumntype{F}{>{$}l<{$}} % math-mode version of "l" column type
\newcolumntype{M}{>{$}c<{$}} % math-mode version of "c" column type
\newcolumntype{E}{>{$}r<{$}} % math-mode version of "r" column type
\newcommand{\PreserveBackslash}[1]{\let\temp=\\#1\let\\=\temp}
\newcolumntype{C}[1]{>{\PreserveBackslash\centering}p{#1}} % Centered, length-customizable environment
\newcolumntype{R}[1]{>{\PreserveBackslash\raggedleft}p{#1}} % Left-aligned, length-customizable environment
\newcolumntype{L}[1]{>{\PreserveBackslash\raggedright}p{#1}} % Right-aligned, length-customizable environment

% See section "Tables/Dividing Cells"
\RequirePackage{diagbox}

% See section "Tables/Cells Content Positioning"
\RequirePackage{makecell}

\RequirePackage{bm}

% \boldmath{<greek letters>}

\RequirePackage{xparse}

\RequirePackage{xfrac}

\RequirePackage{faktor}

% Displays a quotient of A and B by \faktor{A}{B}

% See section "Page Formatting/Float Indent"
\RequirePackage{changepage}

% See sectino "Code Display/Listings"
\RequirePackage{listings}
\definecolor{codegreen}{rgb}{0,0.6,0}
\definecolor{codegray}{rgb}{0.5,0.5,0.5}
\definecolor{codepurple}{rgb}{0.58,0,0.82}
\definecolor{backcolour}{rgb}{0.95,0.95,0.92}
\lstdefinestyle{mystyle}{
    backgroundcolor=\color{backcolour},   
    commentstyle=\color{codegreen},
    keywordstyle=\color{magenta},
    numberstyle=\tiny\color{codegray},
    stringstyle=\color{codepurple},
    basicstyle=\ttfamily\footnotesize,
    breakatwhitespace=false,         
    breaklines=true,                 
    captionpos=b,                    
    keepspaces=true,                 
    numbers=left,                    
    numbersep=5pt,                  
    showspaces=false,                
    showstringspaces=false,
    showtabs=false,                  
    tabsize=4
}
% Source: https://www.overleaf.com/learn/latex/Code_listing
\lstdefinestyle{myc}{
	language = C, 
	style = mystyle
}
\lstdefinestyle{mycpp}{
	language = C++, 
	style = mystyle
}
\lstdefinestyle{mypython}{
	language = Python,
	style = mystyle
}
\lstdefinestyle{mypseudo}{
	style = mystyle
}

\RequirePackage{minted}

% See section "Math/Tools/Harpoon-Style Arrowed Vectors"
\RequirePackage[a]{esvect}
\makeatletter
% \overarrow@ and \arrowfill@ are defined in amsmath
\NewDocumentCommand{\hvv}{m}{
  \mathpalette{\overarrow@{\rightharpoonupfill@}}{#1}
}
\NewDocumentCommand{\rightharpoonupfill@}{}{
  \arrowfill@\relbar\relbar\rightharpoonup
}
\makeatother

% See section "Figures/Adjustments"
\RequirePackage[export]{adjustbox}

\RequirePackage{ifthen}

%%%%% Options %%%%%

\newboolean{tikz}
\setboolean{tikz}{false}
\newboolean{animate}
\setboolean{animate}{false}
\newboolean{forest}
\setboolean{forest}{false}
\newboolean{algorithmicx}
\setboolean{algorithmicx}{false}
\newboolean{zh}
\setboolean{zh}{false}

% See section "Tikz (Optional)"
\DeclareOption{tikz}{\setboolean{tikz}{true}}
% See section "Animate"
\DeclareOption{animate}{\setboolean{animate}{true}}
% See section "Forest"
\DeclareOption{forest}{\setboolean{forest}{true}}
% See section "Code/Pseudo Code"
\DeclareOption{algorithmicx}{\setboolean{algorithmicx}{true}}
\DeclareOption{zh}{\setboolean{zh}{true}}
\DeclareOption*{\PackageWarning{fatscience}{Unknown ‘\CurrentOption’}}
\ProcessOptions\relax

%%%%% More Declarations %%%%%

%%% Lazy Load Packages %%%

\ifthenelse{\boolean{tikz}}
{
\RequirePackage{tikz}
\usetikzlibrary{shapes.geometric, shapes.symbols, shapes.arrows, shapes.multipart, shapes.callouts, shapes.misc, arrows.meta, bending, chains, scopes, trees, positioning, animations}
% Flowcharts tikz styles
\tikzstyle{startstop} = [rectangle, rounded corners, 
minimum width=3cm, 
minimum height=1cm,
text centered, 
draw=black, 
fill=red!30]
\tikzstyle{io} = [trapezium, 
trapezium stretches=true, % A later addition
trapezium left angle=70, 
trapezium right angle=110, 
minimum width=3cm, 
minimum height=1cm, text centered, 
draw=black, fill=blue!30]
\tikzstyle{process} = [rectangle, 
minimum width=3cm, 
minimum height=1cm, 
text centered, 
text width=3cm, 
draw=black, 
fill=orange!30]
\tikzstyle{decision} = [trapezium, 
trapezium stretches=true, % A later addition
trapezium left angle=70, 
trapezium right angle=110, 
minimum width=3cm, 
minimum height=1cm, text centered, 
draw=black, fill=green!30]
% \tikzstyle{decision} = [diamond, 
% minimum width=3cm, 
% minimum height=1cm, 
% text centered, 
% draw=black, 
% fill=green!30]
\tikzstyle{arrow} = [thick,->,>=stealth]
}{}
\ifthenelse{\boolean{animate}}{\RequirePackage{animate}}{}
\ifthenelse{\boolean{forest}}{\RequirePackage{forest}}{}
\ifthenelse{\boolean{algorithmicx}}
{
\RequirePackage{algorithm}
\RequirePackage[noend]{algpseudocode}
\algnewcommand{\algorithmicnot}{\textbf{ not }}
\algnewcommand{\algorithmicto}{\textbf{ to }}
\algnewcommand{\algorithmicin}{\textbf{ in }}
\algnewcommand{\algorithmicand}{\textbf{ and }}
\algnewcommand{\algorithmicor}{\textbf{ or }}
\algnewcommand{\algorithmicnand}{\textbf{ nand }}
\algnewcommand{\algorithmicxor}{\textbf{ xor }}
\algnewcommand{\algorithmicprint}{\textbf{print }}
\algnewcommand{\algorithmiccapcom}[1][]{\hfill $\triangleright$ \makebox[0pt][r]{#1}}
\algnewcommand{\NOT}{\algorithmicnot}
\algnewcommand{\TO}{\algorithmicto}
\algnewcommand{\IN}{\algorithmicin}
\algnewcommand{\AND}{\algorithmicand}
\algnewcommand{\OR}{\algorithmicor}
\algnewcommand{\NAND}{\algorithmicnand}
\algnewcommand{\XOR}{\algorithmicxor}
\algnewcommand{\Print}{\algorithmicprint}
\algnewcommand{\Capcom}{\algorithmiccapcom}
}{}
% Implementation of amsthm theorem environments
\ifthenelse{\boolean{zh}}
{
\usepackage{xeCJK} %CJK Environment
%% CJK fonts, fakes bold automatically
% \setCJKmainfont{Noto Sans CJK TC} % Noto Sans CJK Fonts
\setCJKmainfont[AutoFakeBold]{AR PL UKai TW} % Arphic Kaiti
% \setCJKmainfont[AutoFakeBold]{AR PL UMing TW} % Arphic Mingti
% \setCJKmainfont[Path = <Path to font folder>, AutoFakeBold]{<fontfile>}
\renewcommand{\thesection}{\zhnumber{\arabic{section}}\text{、 }}
% \renewcommand{\thesubsection}{\zhnumber{\arabic{subsection}}\text{、 }}
\renewcommand{\thesubsection}{\alph{subsection}.}
\renewcommand{\thesubsubsection}{\alph{subsection}.\arabic{subsubsection}}
\renewcommand{\figurename}{圖}
\renewcommand{\tablename}{表}
\input{thmenvs-zh}
}
{\input{thmenvs}}

% See section "Math/Fonts"
\let\realAA\AA
\let\realH\H
\let\realL\L
\let\realO\O
\let\realP\P
\let\realS\S
\let\realSS\SS

\ExplSyntaxOn
% Define the sequence variable looping through A-Z
\seq_new:N \l_mymacros_alphabet_seq
\seq_set_from_clist:Nn \l_mymacros_alphabet_seq
{ A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z }
% Map \A, \AA to \mathcal{A}, \mathbb{AA} resp. 
\seq_map_inline:Nn \l_mymacros_alphabet_seq
{
    \cs_gset:cpn { #1 } { \mathcal{#1} }
    \cs_gset:cpn { #1#1 } { \mathbb{#1} }
    % Use the following if do not want to override predefined macros
    % \cs_if_exist:cF { #1 }
    % { \cs_new:cpn { #1 } { \mathcal{#1} } }
    % \cs_if_exist:cF { #1#1 }
    % { \cs_new:cpn { #1#1 } { \mathbb{#1} } }
}
\ExplSyntaxOff

% See section "Math/Fonts"
\DeclareMathAlphabet{\mathcalligra}{T1}{calligra}{m}{n}
\DeclareFontShape{T1}{calligra}{m}{n}{<->s*[2.2]callig15}{}
\NewDocumentCommand{\scripty}{m}{\ensuremath{\mathcalligra{#1}}}

% See section "Math/Tools/Floor & Ceil"
\DeclarePairedDelimiter\floor{\lfloor}{\rfloor}
\DeclarePairedDelimiter\ceil{\lceil}{\rceil}

% See section "Math/Tools/Argmin & Argmax"
\DeclareMathOperator*{\argmax}{arg\,max}
\DeclareMathOperator*{\argmin}{arg\,min}

% See section "Math/Tools/Extra Commands"
\NewDocumentCommand{\ra}{}{\rightarrow}
\NewDocumentCommand{\la}{}{\leftarrow}
\NewDocumentCommand{\Ra}{}{\Rightarrow}
\NewDocumentCommand{\La}{}{\Leftarrow}
\NewDocumentCommand{\Lra}{}{\Leftrightarrow}
\NewDocumentCommand{\lra}{}{\leftrightarrow}
\NewDocumentCommand{\ru}{}{\rightharpoonup}
\NewDocumentCommand{\lu}{}{\leftharpoonup}
\NewDocumentCommand{\rd}{}{\rightharpoondown}
\NewDocumentCommand{\ld}{}{\leftharpoondown}
\NewDocumentCommand{\Gal}{}{\text{Gal}}
\NewDocumentCommand{\id}{}{\text{id}}
\NewDocumentCommand{\dist}{}{\text{dist}}
\NewDocumentCommand{\cha}{}{\text{char}}
\NewDocumentCommand{\diam}{}{\text{diam}}
\NewDocumentCommand{\normto}{}{\trianglelefteq}
\NewDocumentCommand{\snormto}{}{\triangleleft}
\NewDocumentCommand{\bigcdot}{}{\tikz{\draw[fill=black] (0,0) circle (.5ex);}}
\makeatletter
\let\@@span\span
\def\sp@n{\@@span\omit\advance\@multicnt\m@ne}
\makeatother
\renewcommand{\span}{\text{span }}

% See section "Math/Tools/Operator Norm"
\makeatletter
\newcommand{\opnorm}{\@ifstar\@opnorms\@opnorm}
\newcommand{\@opnorms}[1]{%
	\left|\mkern-1.5mu\left|\mkern-1.5mu\left|
	#1
	\right|\mkern-1.5mu\right|\mkern-1.5mu\right|
}
\newcommand{\@opnorm}[2][]{%
	\mathopen{#1|\mkern-1.5mu#1|\mkern-1.5mu#1|}
	#2
	\mathclose{#1|\mkern-1.5mu#1|\mkern-1.5mu#1|}
}
\makeatother

% See section "Code Display/Inline"
\newcommand{\code}[1]{\tcbox[on line,boxsep=0pt,left=2pt,right=2pt,top=2pt,bottom=2pt,colframe=white,colback=gray!25]{\texttt{#1}}}



%%%%% Docs & Examples %%%%%


%%%% Math %%%%


%%% Fonts %%%

%% Shorthand for calligraphy font %%
% \X = \mathcal{X}
% This overwrites the predefined commands: \H, \L, \O, \P, \S
% Access the original commands using \realH, \realL, \realO, \realP, \realS

%% Shorthand for bold font %%
% \XX = \mathbb{X}
% This overwrites the predefined commands: \AA, \SS
% Access the original commands using \realAA, \realSS

%% Scripty Fonts %%
% \scripty{A}


%%% Tools %%%

%% Harpoon-Style Arrowed Vectors %%
% \vv{}: enlarged vector arrow defined in package esvect by default
% \hvv{}: right harpoon up vector arrow additionally defined
% Ex: \vv{abc}, \hvv{abc}
% Source: https://tex.stackexchange.com/questions/530761/special-vector-over-text-half-head-of-the-arrow-vertically-compact

%% Operator Norm %%
% Defines the operator norm command \opnorm, a triple bar norm
% \opnorm{a}        % normal size
% \opnorm[\big]{a}  % slightly larger
% \opnorm[\Bigg]{a} % largest
% \opnorm*{a}       % works like adding \left and \right

%% Floor & Ceil %%
% The ceiling and floor functions
% \floor{a}
% \ceil*{\frac{a}{2}} % add '*' to scale automatically

% Argmin & Argmax %%
% \argmin and \argmax commands that centers underscripts
% Ex: \argmin{x} f(x) \leq 3

% Extra Commands %%
% See the source code. It's easy to understand. 


%%% Figures %%%%

%% Adjustments %% (adjustbox)
% Enables \includegraphics aligning left
% \includegraphics[width = \linewidth, left]{pics/figure.png}

%% Multiple Figures %%
% Multiple figures in same height
% \begin{figure}[H]
%      \centering
%      \begin{subfigure}[H]{0.4\textwidth}
%          \centering
%          \includegraphics[width=\textwidth]{}
%          \caption{subCaption}
%          \label{fig:my_label}
%      \end{subfigure}
%      \hfill
%      \begin{subfigure}[H]{0.4\textwidth}
%          \centering
%          \includegraphics[width=\textwidth]{}
%          \caption{subCaption}
%          \label{fig:my_label}
%      \end{subfigure}
%         \caption{Caption}
%         \label{fig:my_label}
% \end{figure}

%% Wrapping Figures %%
% Figure beside text
% \begin{wrapfigure}{l}{0.25\textwidth}
%     \includegraphics[width=0.9\linewidth]{overleaf-logo}
%     \caption{Caption1}
%     \label{fig:wrapfig}
% \end{wrapfigure}

%% Caption Labels %%
% \renewcommand{\figurename}{圖}


%%%% Tables %%%%

%% Basics %%
% \begin{center}
% \begin{tabular}{|C{3em}|c|l|}
%     \hline
%     a & b \\
%     \hline
%     c & d \\
%     \hline
% \end{tabular}
% \end{center}

%% Multiple Tables %%
% \begin{table}[H]
% \begin{subtable}{.5 \linewidth}
% \centering
% \begin{tabular}{MM}
%     a & b \\
%     \hline
%     c & d \\
% \end{tabular}
% \caption{subtable1}
% \end{subtable}
% \begin{subtable}{.5 \linewidth}
% \centering
% \begin{tabular}{|M|M|}
%     \hline
%     a & b \\
%     \hline
%     c & d \\
%     \hline
% \end{tabular}
% \caption{subtable2}
% \end{subtable}
% \caption{table}
% \label{table1}
% \end{table}

%% Multicolumns & Multirows %%
% \begin{tabular}{|c|c|c|c|p{1cm}p{1cm}p{1cm}p{1cm}p{1cm}p{1cm}p{1cm}|}
% \hline
% A & B & C & D & \multicolumn{7}{|c|}{F}  \\ \hline
% \multirow{ 2}{*}{1} & 0 & 6 & 230 & 35 & 40 & 55 & 25 & 40 & 35 & \\
% & 1 & 5 & 195 & 25 & 50 & 35 & 40 & 45 &  &  \\ \hline
% \end{tabular}

%% Dividing Cells %%
% Use the \diagbox command to diagonally split a cell into multiple parts in a tablular environment
% Syntax: \diagbox[dir=⟨direction⟩]{A}{B}, \diagbox[dir=⟨direction⟩]{A}{B}{C}, etc. 
% Directions: NW(North West), NE(North East), SW(South West), SE(South East)
% Or use the conventional \slashbox{A}{B} command or the \backslashbox{A}{B} command
% Example: 
% \begin{tabular}{|l||*{5}{c|}}\hline
% 	\backslashbox{Room}{Date} % \diagbox{Room}{Date} % \diagbox[dir=NE]{Room}{Person}{Date} 
% 	&\makebox[3em]{5/31}&\makebox[3em]{6/1}&\makebox[3em]{6/2}
% 	&\makebox[3em]{6/3}&\makebox[3em]{6/4}\\\hline\hline
% 	Meeting Room &&&&&\\\hline
% 	Auditorium &&&&&\\\hline
% 	Seminar Room &&&&&\\\hline
% \end{tabular}

%% Cell Content Positioning %%
% The \thead[vh]{Text of a title cell} command is the bold text version of \makecell[vh]{text}.
% The default settings could be set using the preamables such as:
% \renewcommand\theadalign{bc}
% \renewcommand\theadfont{\bfseries}
% \renewcommand\theadgape{\Gape[4pt]}
% \renewcommand\cellgape{\Gape[4pt]}
% The \makecell[vh]{Text of a cell in a table} command could be used to wrap the text of a cell in a tabular environment. 
% This package provides additional feature to table cells, such as inline alignment adjustments, line break feature, title cell, etc. 
% Options v could be one of t (top), c (center) and b(bottom), while h could be one of l(left), c(center) and r(right). 
% For more information from the manual go to <https://ctan.org/pkg/makecell>. 
% Example:
% \begin{tabular}{|c|c|c|}
%   \hline
%   \thead{a head} & \thead{a second \\ head} & \thead{a third \\ head} \\
%   \hline
%   some text &  \makecell{some really \\ longer text}  & text text text  \\
%   \hline
% \end{tabular}

%% Caption Labels %%
% \renewcommand{\tablename}{表}


%%%% Page Formatting %%%%


%% Float Indenting %%
% Indenting an entire paragraph
% \begin{adjustwidth}{<leftmargin>}{<rightmargin>}
% 	%% content %%
% \end{adjustwidth}

% \begin{adjustwidth}{3em}{0em}
% 	\lipsum[3-6]
% \end{adjustwidth}

%% Resize Floats %%
% Example: Resizing a table with shape preserved using the \resizebox command
% \begin{table}
% \centering
% \resizebox{\columnwidth}{!}{%
% \begin{tabular}{r|lll}
% \multicolumn{1}{r}{}
% & \multicolumn{1}{l}{Heading 1}
% & \multicolumn{1}{l}{Heading 2}
% & \multicolumn{1}{l}{Heading 3} \\ \cline{2-4}
% Row 1 & Cell 1,1 & Cell 1,2 & Cell 1,3 \\
% Row 2 & Cell 2,1 & Cell 2,2 & Cell 2,3
% \end{tabular}%
% }


%%%% Code Display %%%%


%%% Inline %%%

% \code{int a;}


%%% Pseudo Code %%%

% Example: 
% \begin{algorithmic}
% \State $i \gets 10$
% \If{$i\geq 5$} 
%     \State $i \gets i-1$
% \Else
%     \If{$i\leq 3$}
%         \State $i \gets i+2$
%     \EndIf
% \EndIf 
% \end{algorithmic}

% Captions in pseudo codes
% \begin{algorithm}
% \caption{Name of Algorithm}
% \begin{algorithmic}
% %%%%%%
% \end{algorithmic}
% \end{algorithm}

% A complete pseudo code example
% \begin{algorithm}[H]
% 	\caption{EXTEND($i$, $j$, $M[2 N - 1][2 N - 1]$)}
% 	\label{alg:extend}
% \begin{algorithmic}[1]
% \Function{EXTEND\_RIGHT}{$i$, $j$, $M[2 N - 1][2 N - 1]$} \Comment{Extend region $ij$ to $i(j + 1)$}
% 	\State $k \gets \Call{ENDPOINT}{j + 1}$
% 	\If{$k < i \OR k > j + 1$}
% 		\State $M(i, j + 1) = \max(M(i, j + 1), M(i, j))$
% 	\ElsIf{$k < j \AND k > i$}
% 		\State $M(i, j + 1) = \max(M(i, j + 1), M(i, j), M(i, k - 1) + M(i, j))$
% 	\Else
% 		\State $M(i, j + 1) = \max(M(i, j + 1), M(i + 1, j) + 1)$
% 	\EndIf
% \EndFunction
% \end{algorithmic}
% \end{algorithm}


%%% Minted %%%

% Terminal commands display
% \begin{minted}{bash}
% $ wget http://tex.stackexchange.com
% \end{minted}

% Styling
% \usemintedstyle{borland}
% \begin{minted}{python}
% import numpy as np
    
% def incmatrix(genl1,genl2):
%     m = len(genl1)
%     n = len(genl2)
%     M = None #to become the incidence matrix
%     VT = np.zeros((n*m,1), int)  #dummy variable
% \end{minted}

% Input raw code
% \inputminted{<language>}{<path to file>}

%%% Listings %%%

%% Code blocks of specific languages %%

% Code Blocks with syntax highlighting
% C++ code example
% \begin{lstlisting}[style=mycpp]
% #include <iostream.h>
% main() {
%  cout << "Hello World!";
%  return 0;
% }

% Set entire document example
% \lstset{language=C++,frame=none}

% Input from file
% \lstinputlisting[style = mypython]{<path_to_python_file>}


%%%% Citation %%%%

% Citing a thesis (in this case reference with label "bethe1949theory")
% 
%% In main.tex: 
% ...
% \addbibresource{references.bib} % create a references.bib file manually
% ...
% \parencite{bethe1949theory}
% ...
% \newpage
% \printbibliography
% \end{document}
% 
% In references.bib (copy this from Cite -> BibTeX in google scholar)
% 
% @article{bethe1949theory,
% 	title={Theory of the effective range in nuclear scattering},
% 	author={Bethe, HA},
% 	journal={Physical Review},
% 	volume={76},
% 	number={1},
% 	pages={38},
% 	year={1949},
% 	publisher={APS}
% }
%
%
% Citing a website (depends on package hyperref and url):
% @misc{name,
%   title = {title},
%   howpublished = {\url{website}},
%   note = {}
% }


%%%% Tikz (Optional) %%%% (tikz)


%% Graphs %%
% Drawing graphs using tikz
% \begin{figure}[H]
% \begin{center}
% \begin{tikzpicture}[scale=1, transform shape]
% 	\coordinate (A) at (90:2);
% 	\draw[black, very thin] (0, 0) grid (4, 1); 
% 	\fill[blue] (1, 0) rectangle (2, 1);
% 	\filldraw[gray] (A) circle (0.5); 
% 	\draw[black, very thin] (4, 0) grid (8, 1); 
% 	\node[align=center] (dots) at (9, 0.5) {$\cdots$}; 
% 	\draw[black, very thin] (10, 0) grid (14, 1); 
% 	\draw (0.5, 0.5) node{1};
% 	\draw (1.5, 0.5) node{0};
% 	\draw (2.5, 0.5) node{$\cdots$};
% 	\draw (3.5, 0.5) node{1};
% 	\draw (4.5, 0.5) node{0};
% 	\draw (5.5, 0.5) node{1};
% 	\draw (6.5, 0.5) node{$\cdots$};
% 	\draw (7.5, 0.5) node{0};
% 	\draw (10.5, 0.5) node{0};
% 	\draw (11.5, 0.5) node{1};
% 	\draw (12.5, 0.5) node{$\cdots$};
% 	\draw (13.5, 0.5) node{1};
% 	\foreach \i\j in {2/1, 6/2, 12/3}{
% 		\node[align = center] (secs\j) at (\i, 1.3) {Section \j}; 
% 		\draw (\i - 1.9, 1.1) -- (\i - 1.9, 1.3) -- (secs\j); 
% 		\draw (secs\j) -- (\i + 1.9, 1.3) -- (\i + 1.9, 1.1); 
% 		\node[align = center] (N\j) at (\i, -0.3) {$\floor{f(n)}$ bits}; 
% 		\draw (\i - 1.9, -0.1) -- (\i - 1.9, -0.3) -- (N\j); 
% 		\draw (N\j) -- (\i + 1.9, -0.3) -- (\i + 1.9, -0.1); 
% 	}
% 	\node[align = center] (sec) at (7, 2) {$\Theta(f(n))$ sections (digits)}; 
% 	\draw (secs1) -- (2, 2) -- (sec); 
% 	\draw (sec) -- (12, 2) -- (secs3); 
% \end{tikzpicture}
% \end{center}
% \caption{A number expressed in $\Theta(f(n))$ sections of $\floor{f(n)}$ bits}
% \label{fig:p4}
% \end{figure}


%% Flowcharts %%
% \begin{center}
% \begin{tikzpicture}[node distance=2cm]
% \node (start) [startstop] {Start};
% \node (in1) [io, below of=start] {Input};
% \node (pro1) [process, below of=in1] {Process 1};
% \node (dec1) [decision, below of=pro1, yshift=-0.5cm] {Decision 1};
% \node (pro2a) [process, below of=dec1, yshift=-0.5cm] {Process 2a};
% \node (pro2b) [process, right of=dec1, xshift=2cm] {Process 2b};
% \node (out1) [io, below of=pro2a] {Output};
% \node (stop) [startstop, below of=out1] {Stop};
% \draw [arrow] (start) -- (in1);
% \draw [arrow] (in1) -- (pro1);
% \draw [arrow] (pro1) -- (dec1);
% \draw [arrow] (dec1) -- node[anchor=east] {yes} (pro2a);
% \draw [arrow] (dec1) -- node[anchor=south] {no} (pro2b);
% \draw [arrow] (pro2b) |- (pro1);
% \draw [arrow] (pro2a) -- (out1);
% \draw [arrow] (out1) -- (stop);
% \end{tikzpicture}
% \end{center}


%%%% Forest (Optional) %%%% 


% forest example
% \begin{forest}
% 	for tree={
% 	calign=center,
% 	grow'=east, % tree direction
% 	rounded corners, draw,
% 	text height=1.4ex, text depth=0.2ex % <<<<<<<<<<<<<
% 	}
% 	[g [B [g [D [E[F]]] [D' [E' [F']]] ]]]
% \end{forest}

% \RequirePackage{titlesec}


